import Head from "next/head";
import Image from "next/image";
import axios from "axios";
import { useState, useEffect } from "react";
import { BsSearch } from "react-icons/bs";
import Weather from "../components/Weather";
import Spinner from "../components/Spinner";

export default function Home() {
  const [city, setCity] = useState("");
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  const [date, setDate] = useState(new Date());

  useEffect(() => {
    const intervalId = setInterval(() => {
      setDate(new Date());
    }, 1000);

    return () => clearInterval(intervalId);
  }, []);

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;

  const fetchWeather = (e) => {
    e.preventDefault();
    setLoading(true);
    axios.get(url).then((response) => {
      setWeather(response.data);
    });
    setCity("");
    setLoading(false);
  };
  const greeting = () => {
    let greeting = "";
    let currentTime = new Date().getHours();

    if (currentTime < 12) {
      greeting = " 🏋🏽‍♀ Good Morning 🏃🏻‍♀️";
    } else if (currentTime < 17) {
      greeting = " 🍝 Good Afternoon 🍽";
    } else {
      greeting = " 🥳 Good Evening 🌇";
    }

    return greeting;
  };

  if (loading) {
    return <Spinner />;
  } else {
    return (
      <div>
        <Head>
          <title>Weather - Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        {/* Overlay */}

        <div className="absolute top-0 left-0 right-0 bottom-0 bg-black/40 z-[1]" />

        {/* Background image */}
        
        <Image
          src="https://images.unsplash.com/photo-1580193769210-b8d1c049a7d9?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1174&q=80"
          layout="fill"
          className="object-cover"
          alt="bgImage"
        />

        {/* Search */}
        <div className="relative flex-wrap justify-between items-center max-w-[500px] w-full m-auto pt-4 px-4 text-white z-10">
          <form
            onSubmit={fetchWeather}
            className="flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl"
          >
            <div>
              <input
                onChange={(e) => setCity(e.target.value)}
                className="bg-transparent border-none text-white focus:outline-none text-2xl"
                type="text"
                placeholder="Search city"
              />
            </div>
            <button onClick={fetchWeather}>
              <BsSearch size={30} />
            </button>
            <span className="flex h-3 w-3 pl-0">
              <span className="animate-ping absolute inline-flex h-3 w-3 rounded-full bg-sky-400 opacity-75 text-center">
                Search City Weather
              </span>
              <span className="relative inline-flex rounded-full h-3 w-3 bg-sky-500"></span>
            </span>
          </form>

          {/* Greeting */}
          <div className="flex items-center justify-center mt-5 bg-black/50 relative p-3 rounded-md text-2xl">
            {greeting()}
          </div>
          {/* Date and Time */}
          <div className="flex items-center justify-center mt-5 bg-black/50 relative p-4 rounded-md">
            <div className=" ml-4 text-2xl">
              {new Date().toLocaleDateString("en-US", {
                weekday: "long",
                year: "numeric",
                month: "long",
                day: "numeric",
              })}
            </div>
            <div className="ml-4 text-3xl">
              {new Date().toLocaleTimeString("en-US", {
                hour: "numeric",
                minute: "numeric",
                hour12: true,
              })}
            </div>
          </div>
        </div>


        {/* Weather */}
        {weather.main && <Weather data={weather} />}
      </div>
    );
  }
}
